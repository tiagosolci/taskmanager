[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "api/.external-ecmascript.js",
    "static": true,
    "longname": "api/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "api/erros/CampoDuplicado.js",
    "content": "/**\n * @extends {Error}\n * A classe CampoDuplicado extende a classe Error e é responsável por formatar e devolver o erro que ocorre quando o usuário tentar inserir uma mesma informação em uma campo no DB que é único. (Ex: e-mail)\n */\nclass CampoDuplicado extends Error {\n    /**\n     * O construtor recebe o nome do campo que gerou o erro\n     * @param {string} campo \n     */\n    constructor(campo) {\n        /**\n         * Concatena o nome do campo a string do erro que será devolvida pela classe.\n         * @type {string}\n         */\n        const mensagem = `O ${ campo } é único e já foi usado.`\n        super(mensagem)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'CampoDuplicado'\n        /**\n         * o id desse tipo de erro é 2.\n         * @type {string}\n         */\n        this.idError = 2\n    }\n}\n\nmodule.exports = CampoDuplicado",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/CampoDuplicado.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "CampoDuplicado",
    "memberof": "api/erros/CampoDuplicado.js",
    "static": true,
    "longname": "api/erros/CampoDuplicado.js~CampoDuplicado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/CampoDuplicado.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/CampoDuplicado.js~CampoDuplicado",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/CampoDuplicado.js~CampoDuplicado#constructor",
    "access": "public",
    "description": "O construtor recebe o nome do campo que gerou o erro",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "campo",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/CampoDuplicado.js~CampoDuplicado",
    "static": false,
    "longname": "api/erros/CampoDuplicado.js~CampoDuplicado#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/CampoDuplicado.js~CampoDuplicado",
    "static": false,
    "longname": "api/erros/CampoDuplicado.js~CampoDuplicado#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 2.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "api/erros/CampoInvalido.js",
    "content": "/**\n * * @extends {Error}\n * A classe CampoInvalido extende a classe Error e é responsável por formatar e devolver o erro que ocorre quando um campo obrigatório não é enviado na requisição ou é nulo.\n */\nclass CampoInvalido extends Error {\n    /**\n     * O construtor recebe o nome do campo que gerou o erro e pode receber também o motivo pelo qual ele é inválido.\n     * @param {string} campo \n     * @param {string} motivo\n     */\n    constructor(campo, motivo) {\n        if (!motivo) motivo = ''\n        /**\n         * Concatena o nome do campo e o motivo se existir a string do erro que será devolvida pela classe.\n         * @type {string}\n         */\n        const mensagem = `O campo ${ campo } está inválido.`.concat(motivo)\n        // if (motivo.length > 0) {\n        //     mensagem.concat(motivo)\n        // }\n        super(mensagem)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'CampoInvalido'\n        /**\n         * o id desse tipo de erro é 1.\n         * @type {string}\n         */\n        this.idError = 1\n    }\n}\n\nmodule.exports = CampoInvalido",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/CampoInvalido.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "CampoInvalido",
    "memberof": "api/erros/CampoInvalido.js",
    "static": true,
    "longname": "api/erros/CampoInvalido.js~CampoInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/CampoInvalido.js",
    "importStyle": null,
    "description": "* @extends {Error}\nA classe CampoInvalido extende a classe Error e é responsável por formatar e devolver o erro que ocorre quando um campo obrigatório não é enviado na requisição ou é nulo.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/CampoInvalido.js~CampoInvalido",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/CampoInvalido.js~CampoInvalido#constructor",
    "access": "public",
    "description": "O construtor recebe o nome do campo que gerou o erro e pode receber também o motivo pelo qual ele é inválido.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "campo",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "motivo",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/CampoInvalido.js~CampoInvalido",
    "static": false,
    "longname": "api/erros/CampoInvalido.js~CampoInvalido#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/CampoInvalido.js~CampoInvalido",
    "static": false,
    "longname": "api/erros/CampoInvalido.js~CampoInvalido#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 1.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "api/erros/FalhaAutenticacao.js",
    "content": "/**\n * * @extends {Error}\n * A classe FalhaAutenticacao extende a classe Error e é responsável por devolver o erro que ocorre quando há falha na autenticação do usuário seja pelo e-mail ou senha errados.\n */\nclass FalhaAutenticacao extends Error {\n    /**\n     * O construtor não recebe parâmetros e somente invoca o super passando a mensagem genérica do erro. Dessa forma o sistema não informa a um possível agente malicioso se um determinado e-mail existe ou não no banco de dados.\n     */\n    constructor() {\n        super(`E-mail ou senha inválidos`)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'FalhaAutenticacao'\n        /**\n         * o id desse tipo de erro é 3.\n         * @type {string}\n         */\n        this.idError = 3\n    }\n}\n\nmodule.exports = FalhaAutenticacao",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/FalhaAutenticacao.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "class",
    "name": "FalhaAutenticacao",
    "memberof": "api/erros/FalhaAutenticacao.js",
    "static": true,
    "longname": "api/erros/FalhaAutenticacao.js~FalhaAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/FalhaAutenticacao.js",
    "importStyle": null,
    "description": "* @extends {Error}\nA classe FalhaAutenticacao extende a classe Error e é responsável por devolver o erro que ocorre quando há falha na autenticação do usuário seja pelo e-mail ou senha errados.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 60,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/FalhaAutenticacao.js~FalhaAutenticacao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/FalhaAutenticacao.js~FalhaAutenticacao#constructor",
    "access": "public",
    "description": "O construtor não recebe parâmetros e somente invoca o super passando a mensagem genérica do erro. Dessa forma o sistema não informa a um possível agente malicioso se um determinado e-mail existe ou não no banco de dados.",
    "lineNumber": 9
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/FalhaAutenticacao.js~FalhaAutenticacao",
    "static": false,
    "longname": "api/erros/FalhaAutenticacao.js~FalhaAutenticacao#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/FalhaAutenticacao.js~FalhaAutenticacao",
    "static": false,
    "longname": "api/erros/FalhaAutenticacao.js~FalhaAutenticacao#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 3.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "api/erros/ProjetoNaoEncontrado.js",
    "content": "/**\n * * @extends {Error}\n * A classe ProjetoNaoEncontrado extende a classe Error e é responsável por devolver o erro que ocorre quando um determinado projeto não é encontrado com o id e usuario_id informados.\n */\nclass ProjetoNaoEncontrado extends Error {\n    /**\n     * O construtor não recebe parâmetros e somente invoca o super passando a mensagem genérica do erro. \n     */\n    constructor() {\n        super(`O projeto não foi localizado`)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'ProjetoNaoEncontrado'\n        /**\n         * o id desse tipo de erro é 8.\n         * @type {string}\n         */\n        this.idError = 8\n    }\n}\n\nmodule.exports = ProjetoNaoEncontrado",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/ProjetoNaoEncontrado.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "ProjetoNaoEncontrado",
    "memberof": "api/erros/ProjetoNaoEncontrado.js",
    "static": true,
    "longname": "api/erros/ProjetoNaoEncontrado.js~ProjetoNaoEncontrado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/ProjetoNaoEncontrado.js",
    "importStyle": null,
    "description": "* @extends {Error}\nA classe ProjetoNaoEncontrado extende a classe Error e é responsável por devolver o erro que ocorre quando um determinado projeto não é encontrado com o id e usuario_id informados.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/ProjetoNaoEncontrado.js~ProjetoNaoEncontrado",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/ProjetoNaoEncontrado.js~ProjetoNaoEncontrado#constructor",
    "access": "public",
    "description": "O construtor não recebe parâmetros e somente invoca o super passando a mensagem genérica do erro. ",
    "lineNumber": 9
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/ProjetoNaoEncontrado.js~ProjetoNaoEncontrado",
    "static": false,
    "longname": "api/erros/ProjetoNaoEncontrado.js~ProjetoNaoEncontrado#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/ProjetoNaoEncontrado.js~ProjetoNaoEncontrado",
    "static": false,
    "longname": "api/erros/ProjetoNaoEncontrado.js~ProjetoNaoEncontrado#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 8.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "api/erros/TarefaNaoEncontrada.js",
    "content": "/**\n * * @extends {Error}\n * A classe TarefaNaoEncontrada extende a classe Error e é responsável por devolver o erro que ocorre quando uma determinada tarefa não é encontrada com o id e projeto_id informados.\n */\nclass TarefaNaoEncontrada extends Error {\n    /**\n     * O construtor não recebe parâmetros e somente invoca o super passando a mensagem genérica do erro. \n     */\n    constructor() {\n        super(`A tarefa não foi encontrada.`)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'TarefaNaoEncontrada'\n        /**\n         * o id desse tipo de erro é 9.\n         * @type {string}\n         */\n        this.idError = 9\n    }\n}\n\nmodule.exports = TarefaNaoEncontrada",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/TarefaNaoEncontrada.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "TarefaNaoEncontrada",
    "memberof": "api/erros/TarefaNaoEncontrada.js",
    "static": true,
    "longname": "api/erros/TarefaNaoEncontrada.js~TarefaNaoEncontrada",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/TarefaNaoEncontrada.js",
    "importStyle": null,
    "description": "* @extends {Error}\nA classe TarefaNaoEncontrada extende a classe Error e é responsável por devolver o erro que ocorre quando uma determinada tarefa não é encontrada com o id e projeto_id informados.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/TarefaNaoEncontrada.js~TarefaNaoEncontrada",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/TarefaNaoEncontrada.js~TarefaNaoEncontrada#constructor",
    "access": "public",
    "description": "O construtor não recebe parâmetros e somente invoca o super passando a mensagem genérica do erro. ",
    "lineNumber": 9
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/TarefaNaoEncontrada.js~TarefaNaoEncontrada",
    "static": false,
    "longname": "api/erros/TarefaNaoEncontrada.js~TarefaNaoEncontrada#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/TarefaNaoEncontrada.js~TarefaNaoEncontrada",
    "static": false,
    "longname": "api/erros/TarefaNaoEncontrada.js~TarefaNaoEncontrada#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 9.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "api/erros/TokenInvalido.js",
    "content": "/**\n * * @extends {Error}\n * A classe TokenInvalido extende a classe Error e é responsável por devolver o erro que ocorre quando um token invalidado ou expirado é enviado em uma requisição para a api.\n */\nclass TokenInvalido extends Error {\n    /**\n         * O construtor recebe o nome do do tipo de token inválido (ex: Access Token, Refresh Token)\n         * @param {string}\n         */\n    constructor(nome) {\n        super(`${ nome } inválido.`)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'TokenInvalido'\n        /**\n         * o id desse tipo de erro é 5.\n         * @type {string}\n         */\n        this.idError = 5\n    }\n}\n\nmodule.exports = TokenInvalido\n",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/TokenInvalido.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "TokenInvalido",
    "memberof": "api/erros/TokenInvalido.js",
    "static": true,
    "longname": "api/erros/TokenInvalido.js~TokenInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/TokenInvalido.js",
    "importStyle": null,
    "description": "* @extends {Error}\nA classe TokenInvalido extende a classe Error e é responsável por devolver o erro que ocorre quando um token invalidado ou expirado é enviado em uma requisição para a api.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 75,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/TokenInvalido.js~TokenInvalido",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/TokenInvalido.js~TokenInvalido#constructor",
    "access": "public",
    "description": "O construtor recebe o nome do do tipo de token inválido (ex: Access Token, Refresh Token)",
    "lineNumber": 10,
    "params": []
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/TokenInvalido.js~TokenInvalido",
    "static": false,
    "longname": "api/erros/TokenInvalido.js~TokenInvalido#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/TokenInvalido.js~TokenInvalido",
    "static": false,
    "longname": "api/erros/TokenInvalido.js~TokenInvalido#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 5.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "api/erros/TokenInvalidoPorLogout.js",
    "content": "/**\n * * @extends {Error}\n ** A classe TokenInvalido extende a classe Error e é responsável por devolver o erro que ocorre quando um token que foi invalidado pelo logout é enviado em nova requisição para a api.\n */\nclass TokenInvalidoPorLogout extends Error {\n    /**\n         * O construtor recebe o nome do do tipo de token invalidado pelo logout (ex: Access Token, Refresh Token)\n         * @param {string}\n         */\n    constructor(nome) {\n        super(`${ nome } inválido por logout!`)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'TokenInvalidoPorLogout'\n        /**\n         * o id desse tipo de erro é 6.\n         * @type {string}\n         */\n        this.idError = 6\n\n    }\n}\n\nmodule.exports = TokenInvalidoPorLogout",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/TokenInvalidoPorLogout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "class",
    "name": "TokenInvalidoPorLogout",
    "memberof": "api/erros/TokenInvalidoPorLogout.js",
    "static": true,
    "longname": "api/erros/TokenInvalidoPorLogout.js~TokenInvalidoPorLogout",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/TokenInvalidoPorLogout.js",
    "importStyle": null,
    "description": "* @extends {Error}\n* A classe TokenInvalido extende a classe Error e é responsável por devolver o erro que ocorre quando um token que foi invalidado pelo logout é enviado em nova requisição para a api.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 80,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/TokenInvalidoPorLogout.js~TokenInvalidoPorLogout",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/TokenInvalidoPorLogout.js~TokenInvalidoPorLogout#constructor",
    "access": "public",
    "description": "O construtor recebe o nome do do tipo de token invalidado pelo logout (ex: Access Token, Refresh Token)",
    "lineNumber": 10,
    "params": []
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/TokenInvalidoPorLogout.js~TokenInvalidoPorLogout",
    "static": false,
    "longname": "api/erros/TokenInvalidoPorLogout.js~TokenInvalidoPorLogout#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/TokenInvalidoPorLogout.js~TokenInvalidoPorLogout",
    "static": false,
    "longname": "api/erros/TokenInvalidoPorLogout.js~TokenInvalidoPorLogout#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 6.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "api/erros/TokenNaoEnviado.js",
    "content": "/**\n * * @extends {Error}\n * A classe TokenNaoEnviado extende a classe Error e é responsável por devolver o erro que ocorre quando um token não é enviado para a api.\n */\nclass TokenNaoEnviado extends Error {\n    /**\n         * O construtor recebe o nome do do tipo de token que não foi enviado em uma requisição (ex: Access Token, Refresh Token)\n         * @param {string}\n         */\n    constructor(nome) {\n        super(`${ nome } não foi enviado.`)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'TokenNaoEnviado'\n        /**\n         * o id desse tipo de erro é 7.\n         * @type {string}\n         */\n        this.idError = 7\n    }\n}\n\n\nmodule.exports = TokenNaoEnviado\n",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/TokenNaoEnviado.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "class",
    "name": "TokenNaoEnviado",
    "memberof": "api/erros/TokenNaoEnviado.js",
    "static": true,
    "longname": "api/erros/TokenNaoEnviado.js~TokenNaoEnviado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/TokenNaoEnviado.js",
    "importStyle": null,
    "description": "* @extends {Error}\nA classe TokenNaoEnviado extende a classe Error e é responsável por devolver o erro que ocorre quando um token não é enviado para a api.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 85,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/TokenNaoEnviado.js~TokenNaoEnviado",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/TokenNaoEnviado.js~TokenNaoEnviado#constructor",
    "access": "public",
    "description": "O construtor recebe o nome do do tipo de token que não foi enviado em uma requisição (ex: Access Token, Refresh Token)",
    "lineNumber": 10,
    "params": []
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/TokenNaoEnviado.js~TokenNaoEnviado",
    "static": false,
    "longname": "api/erros/TokenNaoEnviado.js~TokenNaoEnviado#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/TokenNaoEnviado.js~TokenNaoEnviado",
    "static": false,
    "longname": "api/erros/TokenNaoEnviado.js~TokenNaoEnviado#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 7.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "api/erros/UsuarioNaoEncontrado.js",
    "content": "/**\n * * @extends {Error}\n * A classe TokenNaoEnviado extende a classe Error e é responsável por devolver o erro que ocorre quando um usário não é encontrado no DB com o e-mail informado.\n */\nclass UsuarioNaoEncontrado extends Error {\n    /**\n     * O construtor não recebe parâmetros e somente invoca o super passando a string de que o usuário não existe. \n     */\n    constructor() {\n        super(`Não existe usuário com esse e-mail.`)\n        /**\n         * nome do erro que é sempre igual ao nome da classe\n         * @type {string}\n         */\n        this.name = 'UsuarioNaoEncontrado'\n        /**\n         * o id desse tipo de erro é 4.\n         * @type {string}\n         */\n        this.idError = 4\n    }\n}\n\nmodule.exports = UsuarioNaoEncontrado",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/UsuarioNaoEncontrado.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "UsuarioNaoEncontrado",
    "memberof": "api/erros/UsuarioNaoEncontrado.js",
    "static": true,
    "longname": "api/erros/UsuarioNaoEncontrado.js~UsuarioNaoEncontrado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/UsuarioNaoEncontrado.js",
    "importStyle": null,
    "description": "* @extends {Error}\nA classe TokenNaoEnviado extende a classe Error e é responsável por devolver o erro que ocorre quando um usário não é encontrado no DB com o e-mail informado.",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/erros/UsuarioNaoEncontrado.js~UsuarioNaoEncontrado",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/erros/UsuarioNaoEncontrado.js~UsuarioNaoEncontrado#constructor",
    "access": "public",
    "description": "O construtor não recebe parâmetros e somente invoca o super passando a string de que o usuário não existe. ",
    "lineNumber": 9
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "name",
    "memberof": "api/erros/UsuarioNaoEncontrado.js~UsuarioNaoEncontrado",
    "static": false,
    "longname": "api/erros/UsuarioNaoEncontrado.js~UsuarioNaoEncontrado#name",
    "access": "public",
    "description": "nome do erro que é sempre igual ao nome da classe",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "idError",
    "memberof": "api/erros/UsuarioNaoEncontrado.js~UsuarioNaoEncontrado",
    "static": false,
    "longname": "api/erros/UsuarioNaoEncontrado.js~UsuarioNaoEncontrado#idError",
    "access": "public",
    "description": "o id desse tipo de erro é 4.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "api/erros/index.js",
    "content": "const CampoInvalido = require('./CampoInvalido')\nconst CampoDuplicado = require('./CampoDuplicado')\nconst FalhaAutenticacao = require('./FalhaAutenticacao')\nconst UsuarioNaoEncontrado = require('./UsuarioNaoEncontrado')\nconst TokenInvalido = require('./TokenInvalido')\nconst TokenInvalidoPorLogout = require('./TokenInvalidoPorLogout')\nconst TokenNaoEnviado = require('./TokenNaoEnviado')\nconst ProjetoNaoEncontrado = require('./ProjetoNaoEncontrado')\nconst TarefaNaoEncontrada = require('./TarefaNaoEncontrada')\n\nmodule.exports = { CampoInvalido, CampoDuplicado, FalhaAutenticacao, UsuarioNaoEncontrado, TokenInvalido, TokenInvalidoPorLogout, TokenNaoEnviado, ProjetoNaoEncontrado, TarefaNaoEncontrada }",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/erros/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "CampoInvalido",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~CampoInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "CampoDuplicado",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~CampoDuplicado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "FalhaAutenticacao",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~FalhaAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "UsuarioNaoEncontrado",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~UsuarioNaoEncontrado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "TokenInvalido",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~TokenInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "TokenInvalidoPorLogout",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~TokenInvalidoPorLogout",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "TokenNaoEnviado",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~TokenNaoEnviado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "ProjetoNaoEncontrado",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~ProjetoNaoEncontrado",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "TarefaNaoEncontrada",
    "memberof": "api/erros/index.js",
    "static": true,
    "longname": "api/erros/index.js~TarefaNaoEncontrada",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/erros/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "api/index.js",
    "content": "require('dotenv').config()\n\nconst express = require('express')\nconst app = express()\nconst bodyParser = require('body-parser')\nconst usuarios = require('./rotas/usuarios')\nconst projetos = require('./rotas/projetos')\n\nconst { CampoInvalido, CampoDuplicado, UsuarioNaoEncontrado, FalhaAutenticacao, TokenInvalido, TokenInvalidoPorLogout, TokenNaoEnviado } = require('./erros')\nconst sequelize = require('sequelize')\nconst jwt = require('jsonwebtoken')\nconst { estrategiasAutenticacao } = require('./middlewares')\nrequire('../redis/blocklistAccessToken')\nrequire('../redis/allowlistRefreshToken')\n\napp.use(bodyParser.json())\n\napp.use((req, res, next) => {\n    res.set('X-Powered-By', 'Task Manager')\n    next()\n})\n\napp.use('/', express.static('public'));\n\napp.use('/api/usuarios', usuarios)\napp.use('/api/projetos', projetos)\n\napp.use((error, req, res, next) => {\n    let status = 500\n    const body = {\n        mensagem: error.message\n    }\n\n    if (error instanceof CampoInvalido) {\n        status = 400\n    }\n    if (error instanceof sequelize.UniqueConstraintError) {\n        error = new CampoDuplicado(error.errors[0].path)\n        status = 403\n    }\n    if (error instanceof UsuarioNaoEncontrado) {\n        status = 404\n    }\n    if (error instanceof FalhaAutenticacao) {\n        status = 401\n    }\n    if (error instanceof TokenInvalido) {\n        status = 401\n    }\n    if (error instanceof TokenInvalidoPorLogout) {\n        status = 401\n    }\n    if (error instanceof jwt.TokenExpiredError) {\n        status = 401\n        body.expiradoEm = error.expiredAt\n    }\n    if (error instanceof TokenNaoEnviado) {\n        status = 401\n    }\n\n    res.status(status)\n    res.json({\n        mensagem: error.message,\n        id: error.idError\n    })\n})\n\nconst port = process.env.PORT || 3000;\napp.listen(port, () => console.log(`Servidor rodando na porta ${ port }`))\n\nmodule.exports = app",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "express",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~express",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "app",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~app",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "bodyParser",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~bodyParser",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "usuarios",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~usuarios",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "projetos",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~projetos",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "CampoInvalido",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~CampoInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "sequelize",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~sequelize",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "jwt",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~jwt",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "estrategiasAutenticacao",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~estrategiasAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "port",
    "memberof": "api/index.js",
    "static": true,
    "longname": "api/index.js~port",
    "access": "public",
    "export": false,
    "importPath": "task-manager",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "api/middlewares/Email.js",
    "content": "/**\n * A classe Email é uma classe abstrata que implementa a configuração básica do nodemailer para envio de e-mails.\n */\nconst nodemailer = require('nodemailer')\nclass Email {\n    /**\n     * O método enviaEmail invoca é responsável por verificar se estamos no ambiente de produção ou desenvolvimento e enviar o e-mail com base nessas informações.\n     */\n    async enviaEmail() {\n        const configuracaoEmail = await criarConfiguracaoEmail()\n        const transportador = nodemailer.createTransport(configuracaoEmail)\n\n        const info = await transportador.sendMail(this)\n\n        if (process.env.NODE_ENV !== 'production') {\n            console.log(`URL :${ nodemailer.getTestMessageUrl(info) }`)\n        }\n\n    }\n\n}\n/**\n * objeto construído com os parâmetros de host, usuario e senha existente do ambiente.\n * @type {object}\n */\nconst configuracaoEmailProducao = {\n    host: process.env.EMAIL_HOST,\n    auth: {\n        user: process.env.EMAIL_USUARIO,\n        pass: process.env.EMAIL_SENHA\n    },\n    secure: true\n}\n\n/**\n * objeto construído com os dados do nodemailer para envio de e-mails de testes no ambiente de desenvolvimento.\n * @type {object}\n * @param {object} contaTeste\n */\nconst configuracaoEmailTeste = contaTeste => ({\n    host: 'smtp.ethereal.email',\n    auth: contaTeste\n})\n\n/**\n * Método que retorna com base no ambinente de produção ou desenvolvimento um objeto com os dados para conexão para envio dos e-mails.\n * @returns {object}\n */\nasync function criarConfiguracaoEmail() {\n    if (process.env.NODE_ENV === 'production') {\n        return configuracaoEmailProducao\n    } else {\n        const contaTeste = await nodemailer.createTestAccount()\n        return configuracaoEmailTeste(contaTeste)\n    }\n}\n\n\nmodule.exports = Email",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/middlewares/Email.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "nodemailer",
    "memberof": "api/middlewares/Email.js",
    "static": true,
    "longname": "api/middlewares/Email.js~nodemailer",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/Email.js",
    "importStyle": null,
    "description": "A classe Email é uma classe abstrata que implementa a configuração básica do nodemailer para envio de e-mails.",
    "lineNumber": 4,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "class",
    "name": "Email",
    "memberof": "api/middlewares/Email.js",
    "static": true,
    "longname": "api/middlewares/Email.js~Email",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/Email.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "enviaEmail",
    "memberof": "api/middlewares/Email.js~Email",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/middlewares/Email.js~Email#enviaEmail",
    "access": "public",
    "description": "O método enviaEmail invoca é responsável por verificar se estamos no ambiente de produção ou desenvolvimento e enviar o e-mail com base nessas informações.",
    "lineNumber": 9,
    "params": [],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "configuracaoEmailProducao",
    "memberof": "api/middlewares/Email.js",
    "static": true,
    "longname": "api/middlewares/Email.js~configuracaoEmailProducao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/Email.js",
    "importStyle": null,
    "description": "objeto construído com os parâmetros de host, usuario e senha existente do ambiente.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "configuracaoEmailTeste",
    "memberof": "api/middlewares/Email.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "api/middlewares/Email.js~configuracaoEmailTeste",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/Email.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "contaTeste",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "criarConfiguracaoEmail",
    "memberof": "api/middlewares/Email.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/middlewares/Email.js~criarConfiguracaoEmail",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/Email.js",
    "importStyle": null,
    "description": "Método que retorna com base no ambinente de produção ou desenvolvimento um objeto com os dados para conexão para envio dos e-mails.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "api/middlewares/EmailVerificacao.js",
    "content": "/**\n * * * @extends {Email}\n * A classe EmailVerificacao extende a classe Email e é responsável por implementar o template do e-mail de verificação de e-mail do usuário cadastrado na aplicação\n */\nconst Email = require('./Email')\nclass EmailVerificacao extends Email {\n    /**\n     * O construtor recebe o objeto usuario e a chave pseudo-aleatória que será usada para confirmar o usuário \n     * @param {object} usuario\n     * @param {string} chave \n     */\n    constructor(usuario, chave) {\n        super()\n        /**\n         * monta o endereço da rota do e-mail de confirmação.\n         * @type {string}\n         */\n        this.endereco = `${ process.env.BASE_URL }/api/usuarios/verifica_email/${ chave }`\n        {\n            /**\n            * endereço do qual o e-mail está sendo enviado.\n            * @type {string}\n            */\n            this.from = '\"Task Manager\" <noreply@taskmager.com>'\n            /**\n            * endereço para onde o e-mail será enviado.\n            * @type {string}\n            */\n            this.to = usuario.email\n            /**\n            * Assunto do e-mail\n            * @type {string}\n            */\n            this.subject = 'Verificação de e-mail'\n            /**\n            * corpo do e-mail em formato texto.\n            * @type {string}\n            */\n            this.text = `Olá! Verifique o seu e-mail aqui: ${ this.endereco }`\n            /**\n            * corpo do e-mail em formato html.\n            * @type {string}\n            */\n            this.html = `<h1>Olá!</h1> <p>Verifique o seu e-mail aqui: <a href=\"${ this.endereco }\"> ${ this.endereco }</a></p>`\n        }\n    }\n}\n\nmodule.exports = EmailVerificacao",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/middlewares/EmailVerificacao.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "Email",
    "memberof": "api/middlewares/EmailVerificacao.js",
    "static": true,
    "longname": "api/middlewares/EmailVerificacao.js~Email",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/EmailVerificacao.js",
    "importStyle": null,
    "description": "* * @extends {Email}\nA classe EmailVerificacao extende a classe Email e é responsável por implementar o template do e-mail de verificação de e-mail do usuário cadastrado na aplicação",
    "lineNumber": 5,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "EmailVerificacao",
    "memberof": "api/middlewares/EmailVerificacao.js",
    "static": true,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/EmailVerificacao.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "Email"
    ],
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao#constructor",
    "access": "public",
    "description": "O construtor recebe o objeto usuario e a chave pseudo-aleatória que será usada para confirmar o usuário ",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "usuario",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chave",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "endereco",
    "memberof": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "static": false,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao#endereco",
    "access": "public",
    "description": "monta o endereço da rota do e-mail de confirmação.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "from",
    "memberof": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "static": false,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao#from",
    "access": "public",
    "description": "endereço do qual o e-mail está sendo enviado.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "to",
    "memberof": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "static": false,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao#to",
    "access": "public",
    "description": "endereço para onde o e-mail será enviado.",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "subject",
    "memberof": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "static": false,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao#subject",
    "access": "public",
    "description": "Assunto do e-mail",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "text",
    "memberof": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "static": false,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao#text",
    "access": "public",
    "description": "corpo do e-mail em formato texto.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "html",
    "memberof": "api/middlewares/EmailVerificacao.js~EmailVerificacao",
    "static": false,
    "longname": "api/middlewares/EmailVerificacao.js~EmailVerificacao#html",
    "access": "public",
    "description": "corpo do e-mail em formato html.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "api/middlewares/estrategiaAutenticacao.js",
    "content": "/**\n * middleware que implementa as estratégias de autenticação da aplicação\n * @interface \n */\nconst passport = require('passport')\n/**\n * @module {passport}\n */\nconst bcrypt = require('bcrypt')\n/**\n * @module {bcript}\n */\n\n/**\n * Para configuração da estratégia local de autenticação do usuário foi usado o módulo node passport e passport-local\n */\nconst LocalStrategy = require('passport-local').Strategy\n/**\n * constante que contém a estratégia local do passport\n * @type {class} LocalStrategy\n */\nconst BearerStrategy = require('passport-http-bearer').Strategy\n/**\n * * constante que contém a estratégia bearer do passport\n * @type {class} BearerStrategy\n */\n\nconst Usuario = require('../rotas/usuarios/Usuario')\n/**\n * * constante da Classe Usuário\n * @type {class} Usuario\n */\nconst { FalhaAutenticacao, UsuarioNaoEncontrado } = require('../erros')\n/**\n * * constante das classes de tratamento de erro da interface\n * @type {class} FalhaAutenticacao\n * @type {class} UsuarioNaoEncontrado\n */\n\nconst tokens = require('./tokens')\n/**\n * constante com a interface que concentra manipulação dos tokens do sistema.\n * @type {interface}\n */\n\n/**\n * O método verifica se um usuário foi encontrado com o e-mail informado\n * @param {object} usuario \n * Esse erro ocorre quando um usuário não é encontrado.\n * @throws {UsuarioNaoEncontrado}\n */\nfunction verificaUsuario(usuario) {\n    if (!usuario) throw new UsuarioNaoEncontrado()\n}\n\n/**\n * O métdo verifica atráves do módulo bcrypt se a senha informada pelo cliente é compatível com o hash da senha guardado no DB\n * @param {string} senha \n * @param {string} senhaHash \n * Esse erro ocorre quando a comparação da senha com o hash da senha falha.\n * @throws {FalhaAutenticacao}\n */\nasync function verificaSenha(senha, senhaHash) {\n    const senhaValida = await bcrypt.compare(senha, senhaHash)\n    if (!senhaValida) throw new FalhaAutenticacao()\n}\n\n/**\n * A classe Usuário é instanciada e é feito a busca do registro do usuário pelo e-mail informado no login, caso retorno nulo a estratégia devolve o erro de que o usuário não foi localizado.\n * \n * Encontrado o usuário a senha informada é validada com hash da senha salvo no DB através do método compare do bcrypt.\n * Confirmado que a senha é a correta o middleware passa o usuário localizado para o próximo middleware.\n */\npassport.use(\n    new LocalStrategy({\n        usernameField: 'email',\n        passwordField: 'senha',\n        session: false\n    }, async (email, senha, next) => {\n        try {\n            const usuario = new Usuario({ email })\n            await usuario.buscarPorEmail()\n            verificaUsuario(usuario)\n            await verificaSenha(senha, usuario.senha)\n            next(null, usuario)\n        } catch (error) {\n            next(error)\n        }\n\n    })\n)\n/**\n * Implementa a estratégia a ser usada nas rotas que devem ser protegidas\n */\npassport.use(\n    new BearerStrategy(\n        async (token, next) => {\n            try {\n                const id = await tokens.access.verifica(token)\n                const usuario = new Usuario({ id })\n                await usuario.buscarPorId()\n                next(null, usuario, { token })\n            } catch (error) {\n                next(error)\n            }\n        }\n    )\n)",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/middlewares/estrategiaAutenticacao.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "passport",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~passport",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "middleware que implementa as estratégias de autenticação da aplicação",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@interface",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "bcrypt",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~bcrypt",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": "{passport}"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "LocalStrategy",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~LocalStrategy",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "Para configuração da estratégia local de autenticação do usuário foi usado o módulo node passport e passport-local",
    "lineNumber": 17,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "BearerStrategy",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~BearerStrategy",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "constante que contém a estratégia local do passport",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "Usuario",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~Usuario",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "* constante que contém a estratégia bearer do passport",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "FalhaAutenticacao",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~FalhaAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "* constante da Classe Usuário",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "tokens",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~tokens",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "* constante das classes de tratamento de erro da interface",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "verificaUsuario",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~verificaUsuario",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "O método verifica se um usuário foi encontrado com o e-mail informado",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "usuario",
        "description": "Esse erro ocorre quando um usuário não é encontrado."
      }
    ],
    "throws": [
      {
        "types": [
          "UsuarioNaoEncontrado"
        ],
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "verificaSenha",
    "memberof": "api/middlewares/estrategiaAutenticacao.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/middlewares/estrategiaAutenticacao.js~verificaSenha",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/estrategiaAutenticacao.js",
    "importStyle": null,
    "description": "O métdo verifica atráves do módulo bcrypt se a senha informada pelo cliente é compatível com o hash da senha guardado no DB",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "senha",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "senhaHash",
        "description": "Esse erro ocorre quando a comparação da senha com o hash da senha falha."
      }
    ],
    "throws": [
      {
        "types": [
          "FalhaAutenticacao"
        ],
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "api/middlewares/index.js",
    "content": "const estrategiasAutenticacao = require('./estrategiaAutenticacao')\nconst middlewaresAutenticacao = require('./middlewaresAutenticacao')\nconst tokens = require('./tokens')\nconst EmailVerificacao = require('./EmailVerificacao')\n\nmodule.exports = { estrategiasAutenticacao, middlewaresAutenticacao, tokens, EmailVerificacao }",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/middlewares/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "variable",
    "name": "estrategiasAutenticacao",
    "memberof": "api/middlewares/index.js",
    "static": true,
    "longname": "api/middlewares/index.js~estrategiasAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "middlewaresAutenticacao",
    "memberof": "api/middlewares/index.js",
    "static": true,
    "longname": "api/middlewares/index.js~middlewaresAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "tokens",
    "memberof": "api/middlewares/index.js",
    "static": true,
    "longname": "api/middlewares/index.js~tokens",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "EmailVerificacao",
    "memberof": "api/middlewares/index.js",
    "static": true,
    "longname": "api/middlewares/index.js~EmailVerificacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "api/middlewares/middlewaresAutenticacao.js",
    "content": "/**\n * interface que implementa os middlwares de autenticação da aplicação\n * @interface \n */\n\nconst passport = require('passport')\nconst { FalhaAutenticacao, TokenInvalido } = require('../erros')\nconst Usuario = require('../rotas/usuarios/Usuario')\nconst tokens = require('./tokens')\n\nmodule.exports = {\n    /**\n     * O método local é responsável por interceptar a requisição de login na aplicação e possibilitar o tratamento de erros no padrão do sistema omitindo os erros fora do padrão do passport quando o usuário não é encontrado.\n     * @param {*} req \n     * @param {*} res \n     * @param {*} next \n     * @throws {FalhaAutenticacao} - Esse erro ocorre quando o usuário não é identificado.\n     */\n    local(req, res, next) {\n        passport.authenticate(\n            'local',\n            { session: false },\n            (error, usuario, info) => {\n                if (error) return next(error)\n                if (!usuario) {\n                    error = new FalhaAutenticacao()\n                    return next(error)\n                }\n                req.user = usuario\n                return next()\n            }\n        )(req, res, next)\n    },\n    /**\n     * O método bearer é responsável por interceptar as chamadas realizadas em todas as rotas em que o usuário deverá estar logado para requisitar. Ele permite o tratamento de erros gerados pela confirmação do access token enviado é válido e não está expirado.\n     * @param {*} req \n     * @param {*} res \n     * @param {*} next \n     * @throws {TokenInvalido} - Esse erro ocorre quando é verificado que o token enviado na rota é inválido.\n     */\n    bearer(req, res, next) {\n        passport.authenticate(\n            'bearer',\n            { session: false },\n            (error, usuario, info) => {\n                if (error) return next(error)\n                if (!usuario) {\n                    error = new TokenInvalido('Access Token')\n                    next(error)\n                }\n                req.token = info.token\n                req.user = usuario\n                return next()\n            }\n        )(req, res, next)\n    },\n    /**\n     * O método refresh é responsável por interceptar a chamada realizada para criar um novo access token quando esse está expirado à partir do refresh token enviado. Ele permite o tratamento de erros gerados pela verificação se o refresh token é válido e não está expirado.\n     * @param {*} req \n     * @param {*} res \n     * @param {*} next \n     * @returns \n     */\n    async refresh(req, res, next) {\n        try {\n            const { refreshToken } = req.body\n            const id = await tokens.refresh.verifica(refreshToken)\n            await tokens.refresh.invalida(refreshToken)\n            const usuario = new Usuario({ id })\n            await usuario.buscarPorId()\n            req.user = usuario\n            return next()\n        } catch (error) {\n            next(error)\n        }\n    },\n    /**\n     * O método é responsável por interceptar a rota de verificação do e-mail do usuário recém cadastrado, validando se o token é válido e devolvendo o id do usuário para passar para o próximo middleware.\n     * @param {*} req \n     * @param {*} res \n     * @param {*} next \n     * @returns \n     */\n    async verificacaoEmail(req, res, next) {\n        try {\n            const { token } = req.params\n            const id = await tokens.verificacaoEmail.verificar(token)\n            const usuario = new Usuario({ id })\n            await usuario.buscarPorId()\n            req.user = usuario\n            return next()\n        } catch (error) {\n            next(error)\n        }\n    }\n\n\n}",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/middlewares/middlewaresAutenticacao.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "passport",
    "memberof": "api/middlewares/middlewaresAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/middlewaresAutenticacao.js~passport",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/middlewaresAutenticacao.js",
    "importStyle": null,
    "description": "interface que implementa os middlwares de autenticação da aplicação",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@interface",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "FalhaAutenticacao",
    "memberof": "api/middlewares/middlewaresAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/middlewaresAutenticacao.js~FalhaAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/middlewaresAutenticacao.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "Usuario",
    "memberof": "api/middlewares/middlewaresAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/middlewaresAutenticacao.js~Usuario",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/middlewaresAutenticacao.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "tokens",
    "memberof": "api/middlewares/middlewaresAutenticacao.js",
    "static": true,
    "longname": "api/middlewares/middlewaresAutenticacao.js~tokens",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/middlewaresAutenticacao.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "api/middlewares/tokens.js",
    "content": "/**\n * Interface tokens concentra e abstrai todas as operações com tokens\n */\nconst jwt = require('jsonwebtoken')\nconst crypto = require('crypto')\nconst moment = require('moment')\nconst { allowlistRefreshToken } = require('../../redis')\nconst { blocklistAccessToken } = require('../../redis')\nconst { TokenInvalidoPorLogout, TokenNaoEnviado, TokenInvalido } = require('../erros')\n\n/**\n * método responsável por criar token jwt com base no id do usuário e com o tempo de expiração\n * @param {*} id - id do usuario\n * @param {*} tempoExpiracao - tempo de expiração recebido como array [tempoQuantidade:number,tempoUnidade:string]\n * @returns \n */\nfunction gerarTokenJWT(id, [tempoQuantidade, tempoUnidade]) {\n    const payload = { id }\n    const token = jwt.sign(payload, process.env.CHAVE_JWT, { expiresIn: tempoQuantidade + tempoUnidade })\n    return token\n}\n/**\n * Método que implementa a verificação na blocklist de um token informado, recebendo o token a ser verificado.\n * Ele invoca o método verificaTokenNaBlocklist e caso o token não esteja na lista o método verifica o token jwt informado e devolve o id do usuário.\n * @param {*} token token a ser verificado\n * @param {*} nome nome do token sendo verificado\n * @param {*} blocklist nome da blocklist do token sendo verificado\n * @returns \n */\nasync function verificaTokenJWT(token, nome, blocklist) {\n    await verificaTokenNaBlockList(token, nome, blocklist)\n    const { id } = jwt.verify(token, process.env.CHAVE_JWT)\n    return id\n}\n/**\n * Verifica se um token informado pelo usuário está ou não na blocklist e se positivo \n * @param {*} token - Token a ser verificado\n * @param {*} nome - Nome do tipo do token \n * @param {*} blocklist - Nome da Blocklist do token\n * @throws {TokenInvalidoPorLogout} - Esse erro ocorre quando o token verificado foi incluido na blocklist devido ao logout da aplicação.\n * @returns \n */\nasync function verificaTokenNaBlockList(token, nome, blocklist) {\n    if (!blocklist) return\n    const tokenNaBlacklist = await blocklist.contemToken(token)\n    if (tokenNaBlacklist) {\n        throw new TokenInvalidoPorLogout(nome)\n    }\n}\n/**\n * O método adiciona o token informado a blocklist\n * @param {*} token - Token a ser incluido na blocklist\n * @param {*} blocklist - Nome da Blocklist do token\n * @returns \n */\nfunction invalidaTokenJWT(token, blocklist) {\n    return blocklist.adiciona(token)\n}\n/**\n * O método cria um token opaco com base em dados pseudo-aleatórios e converte em string hexadecimal, usando o módulo moment adicionamos em formato unix o tempo de expiração informado e por fim o token, o id e a data de expiração são adicionados a allowlist.\n * @param {*} id - Id do Usuário\n * @param {*} tempoExpiracao - Tempo de expiração do token, recebido como array [tempoQuantidade:number,tempoUnidade:string]\n * @param {*} allowlist - Nome da allowlist em que o token deve ser adicionado\n * @returns \n */\nasync function gerarTokenOpaco(id, [tempoQuantidade, tempoUnidade], allowlist) {\n    const tokenOpaco = crypto.randomBytes(24).toString('hex')\n    const dataExpiracao = moment().add(tempoQuantidade, tempoUnidade).unix()\n    await allowlist.adiciona(tokenOpaco, id, dataExpiracao)\n    return tokenOpaco\n}\n/**\n * Método responsável por verificar se um token opaco é válido. O método verifica a existência do token na allowlist e retorna um id de usuário.\n * @param {*} token - Nome do Token a ser verificado\n * @param {*} nome - Nome do tipo do Token\n * @param {*} allowlist - Nome da allowlist a ser consultada\n * @throws {TokenNaoEnviado} - Esse erro ocorre quando é verificado que nenhum token foi enviado para consulta\n * @throws {TokenInvalido} - Esse erro ocorre quando é verificado que o token informado não existe na allowlist\n * @returns \n */\nasync function verificaTokenOpaco(token, nome, allowlist) {\n    if (!token) throw new TokenNaoEnviado(nome)\n    const id = await allowlist.buscaValor(token)\n    if (!id) throw new TokenInvalido(nome)\n    return id\n}\n/**\n * O método é responsável por excluir um determinado token da allowlist informada.\n * @param {*} token - Token a ser excluído da allowlist\n * @param {*} allowlist - Nome da allowlist\n */\nasync function invalidaTokenOpaco(token, allowlist) {\n    await allowlist.deleta(token)\n}\n\nmodule.exports = {\n    access: {\n        nome: 'Access token',\n        lista: blocklistAccessToken,\n        expiracao: [15, 'm'],\n        gerar(id) {\n            return gerarTokenJWT(id, this.expiracao)\n        },\n        verifica(token) {\n            return verificaTokenJWT(token, this.nome, this.lista)\n        },\n        invalida(token) {\n            return invalidaTokenJWT(token, this.lista)\n        }\n    },\n    refresh: {\n        nome: 'Refresh token',\n        lista: allowlistRefreshToken,\n        expiracao: [5, 'd'],\n        gerar(id) {\n            return gerarTokenOpaco(id, this.expiracao, this.lista)\n        },\n        verifica(token) {\n            return verificaTokenOpaco(token, this.nome, this.lista)\n        },\n        invalida(token) {\n            return invalidaTokenOpaco(token, this.lista)\n        }\n    },\n    verificacaoEmail: {\n        nome: 'Token de verificação de e-mail',\n        expiracao: [1, 'h'],\n        gerar(id) {\n            return gerarTokenJWT(id, this.expiracao)\n        },\n        verificar(token) {\n            return verificaTokenJWT(token, this.nome)\n        }\n    }\n}",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/middlewares/tokens.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "jwt",
    "memberof": "api/middlewares/tokens.js",
    "static": true,
    "longname": "api/middlewares/tokens.js~jwt",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "Interface tokens concentra e abstrai todas as operações com tokens",
    "lineNumber": 4,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "crypto",
    "memberof": "api/middlewares/tokens.js",
    "static": true,
    "longname": "api/middlewares/tokens.js~crypto",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "moment",
    "memberof": "api/middlewares/tokens.js",
    "static": true,
    "longname": "api/middlewares/tokens.js~moment",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "allowlistRefreshToken",
    "memberof": "api/middlewares/tokens.js",
    "static": true,
    "longname": "api/middlewares/tokens.js~allowlistRefreshToken",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "blocklistAccessToken",
    "memberof": "api/middlewares/tokens.js",
    "static": true,
    "longname": "api/middlewares/tokens.js~blocklistAccessToken",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "TokenInvalidoPorLogout",
    "memberof": "api/middlewares/tokens.js",
    "static": true,
    "longname": "api/middlewares/tokens.js~TokenInvalidoPorLogout",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "gerarTokenJWT",
    "memberof": "api/middlewares/tokens.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "api/middlewares/tokens.js~gerarTokenJWT",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "método responsável por criar token jwt com base no id do usuário e com o tempo de expiração",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "id do usuario"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "tempoExpiracao",
        "description": "tempo de expiração recebido como array [tempoQuantidade:number,tempoUnidade:string]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "verificaTokenJWT",
    "memberof": "api/middlewares/tokens.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/middlewares/tokens.js~verificaTokenJWT",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "Método que implementa a verificação na blocklist de um token informado, recebendo o token a ser verificado.\nEle invoca o método verificaTokenNaBlocklist e caso o token não esteja na lista o método verifica o token jwt informado e devolve o id do usuário.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "token a ser verificado"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nome",
        "description": "nome do token sendo verificado"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "blocklist",
        "description": "nome da blocklist do token sendo verificado"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "verificaTokenNaBlockList",
    "memberof": "api/middlewares/tokens.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/middlewares/tokens.js~verificaTokenNaBlockList",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "Verifica se um token informado pelo usuário está ou não na blocklist e se positivo ",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "Token a ser verificado"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nome",
        "description": "Nome do tipo do token"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "blocklist",
        "description": "Nome da Blocklist do token"
      }
    ],
    "throws": [
      {
        "types": [
          "TokenInvalidoPorLogout"
        ],
        "description": "Esse erro ocorre quando o token verificado foi incluido na blocklist devido ao logout da aplicação."
      }
    ],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "invalidaTokenJWT",
    "memberof": "api/middlewares/tokens.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "api/middlewares/tokens.js~invalidaTokenJWT",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "O método adiciona o token informado a blocklist",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "Token a ser incluido na blocklist"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "blocklist",
        "description": "Nome da Blocklist do token"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "gerarTokenOpaco",
    "memberof": "api/middlewares/tokens.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/middlewares/tokens.js~gerarTokenOpaco",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "O método cria um token opaco com base em dados pseudo-aleatórios e converte em string hexadecimal, usando o módulo moment adicionamos em formato unix o tempo de expiração informado e por fim o token, o id e a data de expiração são adicionados a allowlist.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Id do Usuário"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "tempoExpiracao",
        "description": "Tempo de expiração do token, recebido como array [tempoQuantidade:number,tempoUnidade:string]"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "allowlist",
        "description": "Nome da allowlist em que o token deve ser adicionado"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "verificaTokenOpaco",
    "memberof": "api/middlewares/tokens.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/middlewares/tokens.js~verificaTokenOpaco",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "Método responsável por verificar se um token opaco é válido. O método verifica a existência do token na allowlist e retorna um id de usuário.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "Nome do Token a ser verificado"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nome",
        "description": "Nome do tipo do Token"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "allowlist",
        "description": "Nome da allowlist a ser consultada"
      }
    ],
    "throws": [
      {
        "types": [
          "TokenNaoEnviado"
        ],
        "description": "Esse erro ocorre quando é verificado que nenhum token foi enviado para consulta"
      },
      {
        "types": [
          "TokenInvalido"
        ],
        "description": "Esse erro ocorre quando é verificado que o token informado não existe na allowlist"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "invalidaTokenOpaco",
    "memberof": "api/middlewares/tokens.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/middlewares/tokens.js~invalidaTokenOpaco",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/middlewares/tokens.js",
    "importStyle": null,
    "description": "O método é responsável por excluir um determinado token da allowlist informada.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "Token a ser excluído da allowlist"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "allowlist",
        "description": "Nome da allowlist"
      }
    ],
    "return": null
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "api/migrations/20210405004107-create-usuarios.js",
    "content": "'use strict';\nmodule.exports = {\n  up: async (queryInterface, Sequelize) => {\n    await queryInterface.createTable('Usuarios', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      nome: {\n        type: Sequelize.STRING,\n        allowNull: false\n      },\n      email: {\n        type: Sequelize.STRING,\n        allowNull: false,\n        unique: true\n      },\n      senha: {\n        type: Sequelize.STRING,\n        allowNull: false\n      },\n      ativo: {\n        type: Sequelize.BOOLEAN,\n        defaultValue: true\n      },\n      emailVerificado: {\n        type: Sequelize.BOOLEAN,\n        defaultValue: false\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      deletedAt: {\n        deleteAt: true,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: async (queryInterface, Sequelize) => {\n    await queryInterface.dropTable('Usuarios');\n  }\n};",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/migrations/20210405004107-create-usuarios.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "api/migrations/20210427164340-create-projetos.js",
    "content": "'use strict';\nmodule.exports = {\n  up: async (queryInterface, Sequelize) => {\n    await queryInterface.createTable('Projetos', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      usuario_id: {\n        allowNull: false,\n        type: Sequelize.INTEGER,\n        references: { model: 'Usuarios', key: 'id' }\n      },\n      nome: {\n        type: Sequelize.STRING,\n        allowNull: false\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      deletedAt: {\n        deleteAt: true,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: async (queryInterface, Sequelize) => {\n    await queryInterface.dropTable('Projetos');\n  }\n};",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/migrations/20210427164340-create-projetos.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "api/migrations/20210427165449-create-tarefas.js",
    "content": "'use strict';\nmodule.exports = {\n  up: async (queryInterface, Sequelize) => {\n    await queryInterface.createTable('Tarefas', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      projeto_id: {\n        allowNull: false,\n        type: Sequelize.INTEGER,\n        references: { model: 'Projetos', key: 'id' }\n      },\n      nome: {\n        allowNull: false,\n        type: Sequelize.STRING\n      },\n      descricao: {\n        type: Sequelize.STRING\n      },\n      concluido: {\n        allowNull: true,\n        type: Sequelize.BOOLEAN,\n        defaultValue: false\n      },\n      dataTermino: {\n        allowNull: true,\n        type: Sequelize.DATE\n      },\n      dataConclusao: {\n        allowNull: true,\n        type: Sequelize.DATE\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      deletedAt: {\n        deleteAt: true,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: async (queryInterface, Sequelize) => {\n    await queryInterface.dropTable('Tarefas');\n  }\n};",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/migrations/20210427165449-create-tarefas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "api/models/index.js",
    "content": "'use strict';\n/**\n * Interface responsável por implemetar as configuração do sequelize.\n */\nconst fs = require('fs');\n/*** @ignore*/\nconst path = require('path');\n/*** @ignore*/\nconst Sequelize = require('sequelize');\n/*** @ignore*/\nconst basename = path.basename(__filename);\n/*** @ignore*/\nconst env = process.env.NODE_ENV || 'development';\n/*** @ignore*/\nconst config = require(__dirname + '/../config/config.json')[env];\n/*** @ignore*/\nconst db = {};\n/*** @ignore*/\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/models/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "fs",
    "memberof": "api/models/index.js",
    "static": true,
    "longname": "api/models/index.js~fs",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/index.js",
    "importStyle": null,
    "description": "Interface responsável por implemetar as configuração do sequelize.",
    "lineNumber": 5,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "path",
    "memberof": "api/models/index.js",
    "static": true,
    "longname": "api/models/index.js~path",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "Sequelize",
    "memberof": "api/models/index.js",
    "static": true,
    "longname": "api/models/index.js~Sequelize",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "basename",
    "memberof": "api/models/index.js",
    "static": true,
    "longname": "api/models/index.js~basename",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "variable",
    "name": "env",
    "memberof": "api/models/index.js",
    "static": true,
    "longname": "api/models/index.js~env",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "config",
    "memberof": "api/models/index.js",
    "static": true,
    "longname": "api/models/index.js~config",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "db",
    "memberof": "api/models/index.js",
    "static": true,
    "longname": "api/models/index.js~db",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "file",
    "name": "api/models/projetos.js",
    "content": "'use strict';\n/**\n * @type {class} constante que possui o Model do sequelize e que implementa a tabela de projetos, definindo as associações da tabela, as suas colunas e tipos.\n */\nconst {\n  Model\n} = require('sequelize');\nmodule.exports = (sequelize, DataTypes) => {\n  class Projetos extends Model {\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    static associate(models) {\n      // define association here\n      Projetos.belongsTo(models.Usuarios, {\n        foreignKey: 'usuario_id'\n      })\n      Projetos.hasMany(models.Tarefas, {\n        foreignKey: 'projeto_id'\n      })\n    }\n  };\n  Projetos.init({\n    usuario_id: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    },\n    nome: {\n      type: DataTypes.STRING,\n      allowNull: false\n    }\n  }, {\n    sequelize,\n    modelName: 'Projetos',\n    paranoid: true\n  });\n  return Projetos;\n};",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/models/projetos.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "name": "Model",
    "memberof": "api/models/projetos.js",
    "static": true,
    "longname": "api/models/projetos.js~Model",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/projetos.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "api/models/tarefas.js",
    "content": "'use strict';\n/**\n * @type {class} constante que possui o Model do sequelize e que implementa a tabela de Tarefas, definindo as associações da tabela, as suas colunas e tipos.\n */\nconst {\n  Model\n} = require('sequelize');\nmodule.exports = (sequelize, DataTypes) => {\n  class Tarefas extends Model {\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    static associate(models) {\n      // define association here\n      Tarefas.belongsTo(models.Projetos, {\n        foreignKey: 'projeto_id'\n      })\n    }\n  };\n  Tarefas.init({\n    projeto_id: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    },\n    nome: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    descricao: {\n      type: DataTypes.STRING,\n      allowNull: true\n    },\n    concluido: {\n      type: DataTypes.BOOLEAN,\n      default: false\n    },\n    dataTermino: {\n      type: DataTypes.DATE,\n      allowNull: true\n    },\n    dataConclusao: {\n      type: DataTypes.DATE,\n      allowNull: true\n    }\n  }, {\n    sequelize,\n    modelName: 'Tarefas',\n    paranoid: true\n  });\n  return Tarefas;\n};",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/models/tarefas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "Model",
    "memberof": "api/models/tarefas.js",
    "static": true,
    "longname": "api/models/tarefas.js~Model",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/tarefas.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "api/models/usuarios.js",
    "content": "'use strict';\n/**\n * @type {class} constante que possui o Model do sequelize e que implementa a tabela de Usuarios, definindo as associações da tabela, as suas colunas e tipos.\n * @throws {Error} - O erro ocorre na validação do nome do usuário que dever ter três ou mais caracteres.\n * A classe verifica também se o e-mail informado é único na tabela através da função validade na coluna e-mail que é capturado e tratado na classe Usuário.\n */\nconst {\n  Model\n} = require('sequelize');\nmodule.exports = (sequelize, DataTypes) => {\n  class Usuarios extends Model {\n    static associate(models) {\n      Usuarios.hasMany(models.Projetos, {\n        foreignKey: 'usuario_id'\n      })\n    }\n  };\n  Usuarios.init({\n    nome: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        funcaoValidadora: (dado) => {\n          if (dado.length < 3) throw new Error('O campo nome deve ter mais de três caracteres.')\n        }\n      }\n    },\n    email: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      unique: true,\n      validate: {\n        isEmail: {\n          args: true,\n          msg: 'O tipo do e-mail informado é inválido.'\n        },\n      }\n    },\n    senha: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    ativo: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: true\n    },\n    emailVerificado: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false\n    },\n    deletedAt: {\n      allowNull: true,\n      type: DataTypes.DATE\n    }\n  }, {\n    sequelize,\n    modelName: 'Usuarios',\n    paranoid: true,\n    defaultScope: {\n      where: { ativo: true }\n    },\n    scopes: { todos: { where: {} } }\n  });\n  return Usuarios;\n};\n",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/models/usuarios.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "Model",
    "memberof": "api/models/usuarios.js",
    "static": true,
    "longname": "api/models/usuarios.js~Model",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/models/usuarios.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": null
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "O erro ocorre na validação do nome do usuário que dever ter três ou mais caracteres.\nA classe verifica também se o e-mail informado é único na tabela através da função validade na coluna e-mail que é capturado e tratado na classe Usuário."
      }
    ]
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "api/rotas/projetos/Projeto.js",
    "content": "const { response } = require('express')\nconst { CampoInvalido, ProjetoNaoEncontrado } = require('../../erros')\nconst { ProjetosService } = require('../../services')\nconst projetosService = new ProjetosService()\n/**\n * A classe Projeto é responsável por gerenciar todas as operações relacionadas a projetos.\n */\nclass Projeto {\n    constructor({ id, usuario_id, nome, createdAt, updatedAt, deleteAt }) {\n        this.id = id\n        this.usuario_id = usuario_id\n        this.nome = nome\n        this.createdAt = createdAt\n        this.updatedAt = updatedAt\n        this.deleteAt = deleteAt\n    }\n\n    /**\n     * Busca a e retorna lista de projetos de um usuario atráves do id do usuário\n     * @returns {[Projeto]}\n     */\n    async buscaProjetosPorUsuarioId() {\n        const projetos = await projetosService.buscaProjetosPorUsuarioId(this.usuario_id)\n        return projetos\n    }\n\n    /**\n     * Cria um projeto após validação dos campos obrigatórios\n     */\n    async criar() {\n        this.validar()\n\n        const resultado = await projetosService.criaRegistro({\n            usuario_id: this.usuario_id,\n            nome: this.nome,\n        })\n        this.id = resultado.id\n        this.createdAt = resultado.createdAt\n        this.updatedAt = resultado.updatedAt\n    }\n\n    /**\n     * Define e valida os campos obrigratórios para criação e atualização de projetos\n     * @throws {CampoInvalido} - Esse erro ocorre quando um campo obrigatório não é informado.\n     */\n    validar() {\n        const campos = ['nome']\n        campos.forEach((campo) => {\n            const valor = this[campo]\n            if (typeof (valor) !== 'string' || valor.length === 0) {\n                throw new CampoInvalido(campo)\n            }\n        })\n    }\n\n    /**\n     * Atualiza um projeto após a validação dos campos\n     */\n    async atualizar() {\n        this.validar()\n        await projetosService.atualizaRegistro(this, this.id, this.usuario_id)\n    }\n\n    /**\n     * Busca um projeto atráves do id do projeto e do usuário\n     * @throws {ProjetoNaoEncontrado} - Esse erro ocorre quando um projeto não é encontrado\n     */\n    async buscarProjeto() {\n        const resultado = await projetosService.pegaUmRegistro(this.id, this.usuario_id)\n        if (!resultado) throw new ProjetoNaoEncontrado()\n        this.nome = resultado.nome\n        this.createdAt = resultado.createdAt\n        this.updatedAt = resultado.updatedAt\n        this.deleteAt = resultado.deleteAt\n    }\n\n    /**\n     * Deleta um projeto através do seu id.\n     */\n    async deletar() {\n        await projetosService.apagaRegistro(this.id)\n    }\n\n}\n\nmodule.exports = Projeto",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/rotas/projetos/Projeto.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "name": "response",
    "memberof": "api/rotas/projetos/Projeto.js",
    "static": true,
    "longname": "api/rotas/projetos/Projeto.js~response",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/Projeto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "CampoInvalido",
    "memberof": "api/rotas/projetos/Projeto.js",
    "static": true,
    "longname": "api/rotas/projetos/Projeto.js~CampoInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/Projeto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "variable",
    "name": "ProjetosService",
    "memberof": "api/rotas/projetos/Projeto.js",
    "static": true,
    "longname": "api/rotas/projetos/Projeto.js~ProjetosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/Projeto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "projetosService",
    "memberof": "api/rotas/projetos/Projeto.js",
    "static": true,
    "longname": "api/rotas/projetos/Projeto.js~projetosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/Projeto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "api/services/ProjetosService.js~ProjetosService"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "Projeto",
    "memberof": "api/rotas/projetos/Projeto.js",
    "static": true,
    "longname": "api/rotas/projetos/Projeto.js~Projeto",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/Projeto.js",
    "importStyle": null,
    "description": "A classe Projeto é responsável por gerenciar todas as operações relacionadas a projetos.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 188,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "id",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#id",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "usuario_id",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#usuario_id",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "nome",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#nome",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "createdAt",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#createdAt",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "updatedAt",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#updatedAt",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "deleteAt",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#deleteAt",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "buscaProjetosPorUsuarioId",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#buscaProjetosPorUsuarioId",
    "access": "public",
    "description": "Busca a e retorna lista de projetos de um usuario atráves do id do usuário",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{[Projeto]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Projeto]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "criar",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#criar",
    "access": "public",
    "description": "Cria um projeto após validação dos campos obrigatórios",
    "lineNumber": 30,
    "params": [],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "validar",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#validar",
    "access": "public",
    "description": "Define e valida os campos obrigratórios para criação e atualização de projetos",
    "lineNumber": 46,
    "throws": [
      {
        "types": [
          "CampoInvalido"
        ],
        "description": "Esse erro ocorre quando um campo obrigatório não é informado."
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "atualizar",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#atualizar",
    "access": "public",
    "description": "Atualiza um projeto após a validação dos campos",
    "lineNumber": 59,
    "params": [],
    "return": null
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "buscarProjeto",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#buscarProjeto",
    "access": "public",
    "description": "Busca um projeto atráves do id do projeto e do usuário",
    "lineNumber": 68,
    "throws": [
      {
        "types": [
          "ProjetoNaoEncontrado"
        ],
        "description": "Esse erro ocorre quando um projeto não é encontrado"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "deletar",
    "memberof": "api/rotas/projetos/Projeto.js~Projeto",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/Projeto.js~Projeto#deletar",
    "access": "public",
    "description": "Deleta um projeto através do seu id.",
    "lineNumber": 80,
    "params": [],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "file",
    "name": "api/rotas/projetos/index.js",
    "content": "const Projeto = require('./Projeto')\nconst router = require('express').Router()\nconst { middlewaresAutenticacao } = require('../../middlewares')\n\nrouter.get('/', middlewaresAutenticacao.bearer, async (req, res, next) => {\n    try {\n        const usuario_id = req.user.id\n        const projeto = new Projeto({ usuario_id })\n        const projetos = await projeto.buscaProjetosPorUsuarioId()\n        res.status(200).json(projetos)\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.post('/', middlewaresAutenticacao.bearer, async (req, res, next) => {\n    try {\n        const usuario_id = req.user.id\n        const { nome } = req.body\n        const projeto = new Projeto({ usuario_id, nome })\n        await projeto.criar()\n        res.status(201).json(projeto)\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.put('/', middlewaresAutenticacao.bearer, async (req, res, next) => {\n    try {\n        const usuario_id = req.user.id\n        const { id, nome } = req.body\n        const projeto = new Projeto({ id, usuario_id, nome })\n        await projeto.atualizar()\n        res.status(200).json(projeto)\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.delete('/', middlewaresAutenticacao.bearer, async (req, res, next) => {\n    try {\n        const usuario_id = req.user.id\n        const { id } = req.body\n        const projeto = new Projeto({ id, usuario_id })\n        await projeto.buscarProjeto()\n        await projeto.deletar()\n        res.status(200).json({ mensagem: `Projeto ${ projeto.nome } deletado` })\n    } catch (error) {\n        next(error)\n    }\n})\n/**\n * Método para validar se o projeto informado na rota de tarefas é válido e pertence ao usuário logado fazendo a requisição.\n * @param {*} req \n * @param {*} res \n * @param {*} next \n */\nconst verificarProjeto = async (req, res, next) => {\n    try {\n        const usuario_id = req.user.id\n        const id = Number(req.params.idProjeto)\n        const projeto = new Projeto({ id, usuario_id })\n        await projeto.buscarProjeto()\n        req.projeto = projeto\n        next()\n    } catch (error) {\n        /**\n         * chama o próximo middleware caso retorne erro\n         */\n        next(error)\n    }\n}\n\n/**\n * Importa as rotas de tarefas, dessa forma elas ficam sobre projetos em dependência desse. Ganha-se além da validação do access token a validação do projeto.\n * @type \n */\nconst roteadorTarefas = require('./tarefas')\nrouter.use('/:idProjeto/tarefas', middlewaresAutenticacao.bearer, verificarProjeto, roteadorTarefas)\n\n\n\nmodule.exports = router",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/rotas/projetos/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "Projeto",
    "memberof": "api/rotas/projetos/index.js",
    "static": true,
    "longname": "api/rotas/projetos/index.js~Projeto",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "router",
    "memberof": "api/rotas/projetos/index.js",
    "static": true,
    "longname": "api/rotas/projetos/index.js~router",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "middlewaresAutenticacao",
    "memberof": "api/rotas/projetos/index.js",
    "static": true,
    "longname": "api/rotas/projetos/index.js~middlewaresAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "verificarProjeto",
    "memberof": "api/rotas/projetos/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "api/rotas/projetos/index.js~verificarProjeto",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/index.js",
    "importStyle": null,
    "description": "Método para validar se o projeto informado na rota de tarefas é válido e pertence ao usuário logado fazendo a requisição.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "roteadorTarefas",
    "memberof": "api/rotas/projetos/index.js",
    "static": true,
    "longname": "api/rotas/projetos/index.js~roteadorTarefas",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/index.js",
    "importStyle": null,
    "description": "Importa as rotas de tarefas, dessa forma elas ficam sobre projetos em dependência desse. Ganha-se além da validação do access token a validação do projeto.",
    "lineNumber": 78,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "api/rotas/projetos/tarefas/Tarefa.js",
    "content": "const { CampoInvalido, TarefaNaoEncontrada } = require('../../../erros')\nconst { TarefasService } = require('../../../services')\nconst tarefasService = new TarefasService()\n/**\n * A classe Tarefa é responsável por gerenciar todas as operações relacionadas a projetos.\n */\nclass Tarefa {\n    constructor({ id, projeto_id, nome, concluido, dataTermino, dataConclusao, descricao, createdAt, updatedAt, deletedAt }) {\n        this.id = id\n        this.projeto_id = projeto_id\n        this.nome = nome\n        this.concluido = concluido\n        this.dataTermino = dataTermino\n        this.dataConclusao = dataConclusao\n        this.descricao = descricao\n        this.createdAt = createdAt\n        this.updatedAt = updatedAt\n        this.deletedAt = deletedAt\n    }\n    /**\n     * Cria uma tarefa após validação dos campos obrigatórios\n     */\n    async criar() {\n        this.validar()\n        const resultado = await tarefasService.criaRegistro({\n            projeto_id: this.projeto_id,\n            nome: this.nome,\n            concluido: this.concluido,\n            dataTermino: this.dataTermino,\n            dataConclusao: this.dataConclusao,\n            descricao: this.descricao\n        })\n        this.id = resultado.id\n        this.concluido = resultado.concluido\n        this.createdAt = resultado.createdAt\n        this.updatedAt = resultado.updatedAt\n\n    }\n\n    /**\n     * Define e valida os campos obrigratórios para criação e atualização de tarefas\n     * @throws {CampoInvalido} - Esse erro ocorre quando um campo obrigatório não é informado.\n     */\n    validar() {\n        const campos = ['nome']\n        campos.forEach((campo) => {\n            const valor = this[campo]\n            if (typeof (valor) !== 'string' || valor.length === 0) {\n                throw new CampoInvalido(campo)\n            }\n        })\n    }\n\n    /**\n     * Atualiza uma tarefa após a validação dos campos\n     */\n    async atualizar() {\n        this.validar()\n        await tarefasService.atualizaRegistro(this, this.id)\n    }\n\n    /**\n     * Busca uma tarefa atráves do id da tarefa e do projeto\n     * @throws {TarefaNaoEncontrada} - Esse erro ocorre quando a tarefa não é encontrada.\n     */\n    async buscarTarefa() {\n        const resultado = await tarefasService.pegaUmRegistro(this.id, this.projeto_id)\n        if (!resultado) throw new TarefaNaoEncontrada()\n        this.nome = resultado.nome\n        this.concluido = resultado.concluido\n        this.dataTermino = resultado.dataTermino\n        this.dataConclusao = resultado.dataConclusao\n        this.descricao = resultado.descricao\n        this.createdAt = resultado.createdAt\n        this.updatedAt = resultado.updatedAt\n        this.deleteAt = resultado.deleteAt\n    }\n\n    /**\n     * Deleta uma tarefa através do seu id.\n     */\n    async deletar() {\n        await tarefasService.apagaRegistro(this.id)\n    }\n}\n\nmodule.exports = Tarefa",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/rotas/projetos/tarefas/Tarefa.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "CampoInvalido",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js",
    "static": true,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~CampoInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/tarefas/Tarefa.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 216,
    "kind": "variable",
    "name": "TarefasService",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js",
    "static": true,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~TarefasService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/tarefas/Tarefa.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "name": "tarefasService",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js",
    "static": true,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~tarefasService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/tarefas/Tarefa.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "api/services/TarefasService.js~TarefasService"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "class",
    "name": "Tarefa",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js",
    "static": true,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/tarefas/Tarefa.js",
    "importStyle": null,
    "description": "A classe Tarefa é responsável por gerenciar todas as operações relacionadas a projetos.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 219,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "id",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#id",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "projeto_id",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#projeto_id",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "nome",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#nome",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "concluido",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#concluido",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "dataTermino",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#dataTermino",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "dataConclusao",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#dataConclusao",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "descricao",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#descricao",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "createdAt",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#createdAt",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "updatedAt",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#updatedAt",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "deletedAt",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#deletedAt",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "criar",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#criar",
    "access": "public",
    "description": "Cria uma tarefa após validação dos campos obrigatórios",
    "lineNumber": 23,
    "params": [],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "validar",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#validar",
    "access": "public",
    "description": "Define e valida os campos obrigratórios para criação e atualização de tarefas",
    "lineNumber": 44,
    "throws": [
      {
        "types": [
          "CampoInvalido"
        ],
        "description": "Esse erro ocorre quando um campo obrigatório não é informado."
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "atualizar",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#atualizar",
    "access": "public",
    "description": "Atualiza uma tarefa após a validação dos campos",
    "lineNumber": 57,
    "params": [],
    "return": null
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "buscarTarefa",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#buscarTarefa",
    "access": "public",
    "description": "Busca uma tarefa atráves do id da tarefa e do projeto",
    "lineNumber": 66,
    "throws": [
      {
        "types": [
          "TarefaNaoEncontrada"
        ],
        "description": "Esse erro ocorre quando a tarefa não é encontrada."
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "deleteAt",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#deleteAt",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "deletar",
    "memberof": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/projetos/tarefas/Tarefa.js~Tarefa#deletar",
    "access": "public",
    "description": "Deleta uma tarefa através do seu id.",
    "lineNumber": 82,
    "params": [],
    "return": null
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "api/rotas/projetos/tarefas/index.js",
    "content": "const router = require('express').Router({ mergeParams: true })\nconst Tarefa = require('./Tarefa')\n\nrouter.get('/:id', async (req, res, next) => {\n    try {\n        const projeto_id = req.projeto.id\n        const id = Number(req.params.id)\n        const tarefa = new Tarefa({ id, projeto_id })\n        await tarefa.buscarTarefa()\n        res.status(201).json(tarefa)\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.post('/', async (req, res, next) => {\n    try {\n        const projeto_id = req.projeto.id\n        const { nome, concluido, dataTermino, dataConclusao, descricao } = req.body\n        const tarefa = new Tarefa({ projeto_id, nome, concluido, dataTermino, dataConclusao, descricao })\n        await tarefa.criar()\n        res.status(201).json(tarefa)\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.put('/:id', async (req, res, next) => {\n    try {\n        const projeto_id = req.projeto.id\n        const id = Number(req.params.id)\n        const { nome, concluido, dataTermino, dataConclusao, descricao } = req.body\n        const tarefa = new Tarefa({ id, projeto_id, nome, concluido, dataTermino, dataConclusao, descricao })\n        await tarefa.atualizar()\n        res.status(201).json(tarefa)\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.delete('/:id', async (req, res, next) => {\n    try {\n        const projeto_id = req.projeto.id\n        const id = Number(req.params.id)\n        const tarefa = new Tarefa({ id, projeto_id })\n        await tarefa.buscarTarefa()\n        await tarefa.deletar()\n        res.status(200).json({ mensagem: `Tarefa ${ tarefa.nome } deletada` })\n\n    } catch (error) {\n        next(error)\n    }\n})\n\nmodule.exports = router",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/rotas/projetos/tarefas/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "router",
    "memberof": "api/rotas/projetos/tarefas/index.js",
    "static": true,
    "longname": "api/rotas/projetos/tarefas/index.js~router",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/tarefas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "variable",
    "name": "Tarefa",
    "memberof": "api/rotas/projetos/tarefas/index.js",
    "static": true,
    "longname": "api/rotas/projetos/tarefas/index.js~Tarefa",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/projetos/tarefas/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "api/rotas/usuarios/Usuario.js",
    "content": "const { CampoInvalido } = require('../../erros')\nconst { UsuariosService } = require('../../services')\nconst usuariosService = new UsuariosService()\nconst bcrypt = require('bcrypt')\n\n/**\n * A classe Usuário é responsável por gerenciar todas as operações relacionadas a usuários.\n */\n\nclass Usuario {\n    /**\n     * O construtor recebe os dados de um usuário e os atribui a instância atual\n     * @param {object} usuario \n     */\n    constructor({ id, nome, email, senha, emailVerificado, createdAt, updatedAt, deleteAt }) {\n        this.id = id\n        this.nome = nome\n        this.email = email\n        this.senha = senha\n        this.emailVerificado = emailVerificado\n        this.createdAt = createdAt\n        this.updatedAt = updatedAt\n        this.deleteAt = deleteAt\n    }\n\n    /**\n     * @throws {sequelize.UniqueConstraintError} - Esse erro ocorre quando um usuário com o mesmo e-mail já está cadastrado.\n     */\n    async criar() {\n        this.validar()\n\n        const resultado = await usuariosService.criaRegistro({\n            nome: this.nome,\n            email: this.email,\n            senha: await this.gerarSenhaHash(this.senha)\n        })\n        this.id = resultado.id\n        this.createdAt = resultado.createdAt\n        this.updatedAt = resultado.updatedAt\n    }\n    /**\n     * Define e Valida se os campos obrigatórios foram informados\n     * @throws {CampoInvalido} - Esse erro ocorre caso um campo obrigatório não tenha sido passado na requisição.\n     */\n    validar() {\n        const campos = ['nome', 'email', 'senha']\n\n        campos.forEach((campo) => {\n            const valor = this[campo]\n            if (typeof (valor) !== 'string' || valor.length === 0) {\n                throw new CampoInvalido(campo)\n            }\n        })\n    }\n\n    /**\n     * Verifica se a senha possui possui no minímo 8 e no máximo 64 caracteres\n     * @param {string} senha \n     * @throws {CampoInvalido} - Esse erro ocorre quando a senha possui menos que 8 e mais de 64 caracteres.\n     * @returns \n     */\n    validarSenha(senha) {\n        if (senha.length < 8) throw new CampoInvalido('senha', `O campo senha precisa ser maior que 8 caracteres!`)\n        if (senha.length > 64) throw new CampoInvalido('senha', `O campo senha precisa ser menor que 64 caracteres!`)\n        return senha\n    }\n\n    /**\n     * Define um custo do hash e gera um hash da senha informada pelo usuário. O custo é a dificuldade computacional envolvida em quebrar o hash.\n     * @param {*} senha \n     * @returns \n     */\n    gerarSenhaHash(senha) {\n        const custoHash = 12\n        return bcrypt.hash(this.validarSenha(senha), custoHash)\n    }\n\n    /**\n     * Busca um usuario através do e-mail\n     * @returns \n     */\n    async buscarPorEmail() {\n        const usuario = await usuariosService.pegaUmRegistro({\n            email: this.email\n        })\n        if (!usuario) return null\n        this.id = usuario.id\n        this.nome = usuario.nome\n        this.senha = usuario.senha\n        this.emailVerificado = usuario.emailVerificado\n        this.createdAt = usuario.createdAt\n        this.updatedAt = usuario.updatedAt\n        this.deleteAt = usuario.deleteAt\n    }\n\n    /**\n     * Busca um usuario através do id\n     * @returns \n     */\n    async buscarPorId() {\n        const usuario = await usuariosService.pegaUmRegistro({\n            id: this.id\n        })\n        if (!usuario) return null\n        this.nome = usuario.nome\n        this.email = usuario.email\n        this.senha = usuario.senha\n        this.emailVerificado = usuario.emailVerificado\n        this.createdAt = usuario.createdAt\n        this.updatedAt = usuario.updatedAt\n        this.deleteAt = usuario.deleteAt\n    }\n\n    /**\n     * Registra no DB que o e-mail do usuário foi confirmado.\n     */\n    async verificaEmail() {\n        this.emailVerificado = true\n        await usuariosService.atualizaRegistro({ emailVerificado: this.emailVerificado }, this.id)\n    }\n}\n\nmodule.exports = Usuario",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/rotas/usuarios/Usuario.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "variable",
    "name": "CampoInvalido",
    "memberof": "api/rotas/usuarios/Usuario.js",
    "static": true,
    "longname": "api/rotas/usuarios/Usuario.js~CampoInvalido",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/Usuario.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 252,
    "kind": "variable",
    "name": "UsuariosService",
    "memberof": "api/rotas/usuarios/Usuario.js",
    "static": true,
    "longname": "api/rotas/usuarios/Usuario.js~UsuariosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/Usuario.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "usuariosService",
    "memberof": "api/rotas/usuarios/Usuario.js",
    "static": true,
    "longname": "api/rotas/usuarios/Usuario.js~usuariosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/Usuario.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "api/services/UsuariosService.js~UsuariosService"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "name": "bcrypt",
    "memberof": "api/rotas/usuarios/Usuario.js",
    "static": true,
    "longname": "api/rotas/usuarios/Usuario.js~bcrypt",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/Usuario.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "class",
    "name": "Usuario",
    "memberof": "api/rotas/usuarios/Usuario.js",
    "static": true,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/Usuario.js",
    "importStyle": null,
    "description": "A classe Usuário é responsável por gerenciar todas as operações relacionadas a usuários.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 256,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#constructor",
    "access": "public",
    "description": "O construtor recebe os dados de um usuário e os atribui a instância atual",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "usuario",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "id",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#id",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "nome",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#nome",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "email",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#email",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "senha",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#senha",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "emailVerificado",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#emailVerificado",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "createdAt",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#createdAt",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "updatedAt",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#updatedAt",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "deleteAt",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#deleteAt",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "criar",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#criar",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "throws": [
      {
        "types": [
          "sequelize.UniqueConstraintError"
        ],
        "description": "Esse erro ocorre quando um usuário com o mesmo e-mail já está cadastrado."
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "validar",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#validar",
    "access": "public",
    "description": "Define e Valida se os campos obrigatórios foram informados",
    "lineNumber": 45,
    "throws": [
      {
        "types": [
          "CampoInvalido"
        ],
        "description": "Esse erro ocorre caso um campo obrigatório não tenha sido passado na requisição."
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "validarSenha",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#validarSenha",
    "access": "public",
    "description": "Verifica se a senha possui possui no minímo 8 e no máximo 64 caracteres",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "senha",
        "description": ""
      }
    ],
    "throws": [
      {
        "types": [
          "CampoInvalido"
        ],
        "description": "Esse erro ocorre quando a senha possui menos que 8 e mais de 64 caracteres."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "gerarSenhaHash",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#gerarSenhaHash",
    "access": "public",
    "description": "Define um custo do hash e gera um hash da senha informada pelo usuário. O custo é a dificuldade computacional envolvida em quebrar o hash.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "senha",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "buscarPorEmail",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#buscarPorEmail",
    "access": "public",
    "description": "Busca um usuario através do e-mail",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "buscarPorId",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#buscarPorId",
    "access": "public",
    "description": "Busca um usuario através do id",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "verificaEmail",
    "memberof": "api/rotas/usuarios/Usuario.js~Usuario",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/rotas/usuarios/Usuario.js~Usuario#verificaEmail",
    "access": "public",
    "description": "Registra no DB que o e-mail do usuário foi confirmado.",
    "lineNumber": 117,
    "params": [],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "api/rotas/usuarios/index.js",
    "content": "const router = require('express').Router()\nconst Usuario = require('./Usuario')\nconst { middlewaresAutenticacao, EmailVerificacao, tokens } = require('../../middlewares')\n\nrouter.post('/', async (req, res, next) => {\n    try {\n        const { nome, email, senha } = req.body\n        const usuario = new Usuario({ nome, email, senha })\n        await usuario.criar()\n\n        const token = tokens.verificacaoEmail.gerar(usuario.id)\n        const emailVerificacao = new EmailVerificacao(usuario, token)\n        emailVerificacao.enviaEmail().catch(console.log)\n\n        res.status(201).json({ mensagem: 'Usuário criado com sucesso.' })\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.post('/login', middlewaresAutenticacao.local, async (req, res, next) => {\n    try {\n        const { user } = req\n        const { nome } = user\n        const accessToken = tokens.access.gerar(user.id)\n        const refreshToken = await tokens.refresh.gerar(user.id)\n\n        res.set('Authorization', accessToken)\n        res.status(200).json({ refreshToken, nome })\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.post('/logout', [middlewaresAutenticacao.refresh, middlewaresAutenticacao.bearer], async (req, res, next) => {\n    try {\n        const { token } = req\n        await tokens.access.invalida(token)\n        res.status(204).send()\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.post('/atualiza_token', middlewaresAutenticacao.refresh, async (req, res, next) => {\n    try {\n        const { user } = req\n        const accessToken = tokens.access.gerar(user.id)\n        const refreshToken = await tokens.refresh.gerar(user.id)\n\n        res.set('Authorization', accessToken)\n        res.status(200).json({ refreshToken })\n    } catch (error) {\n        next(error)\n    }\n})\n\nrouter.get('/verifica_email/:token', middlewaresAutenticacao.verificacaoEmail, async (req, res, next) => {\n    try {\n        const { user } = req\n        await user.verificaEmail()\n        res.status(200).json()\n    } catch (error) {\n        next(error)\n    }\n})\n\nmodule.exports = router",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/rotas/usuarios/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "variable",
    "name": "router",
    "memberof": "api/rotas/usuarios/index.js",
    "static": true,
    "longname": "api/rotas/usuarios/index.js~router",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "Usuario",
    "memberof": "api/rotas/usuarios/index.js",
    "static": true,
    "longname": "api/rotas/usuarios/index.js~Usuario",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "middlewaresAutenticacao",
    "memberof": "api/rotas/usuarios/index.js",
    "static": true,
    "longname": "api/rotas/usuarios/index.js~middlewaresAutenticacao",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/rotas/usuarios/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "file",
    "name": "api/seeders/20210405313141-demo-usuario.js",
    "content": "'use strict'\nmodule.exports = {\n    up: async (queryInterface, Sequelize) => {\n\n        await queryInterface.bulkInsert('Usuarios',\n            [\n                {\n                    nome: 'Katia Solci',\n                    email: 'katia@gmail.com',\n                    senha: '$2b$12$iLVBtDlbskczQc7gwwgZPusmPIIqrf6Z4NXzK.H8C.Upv3dM5mxcy',\n                    ativo: true,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                },\n                {\n\n                    nome: 'André Solci',\n                    email: 'andre@gmail.com',\n                    senha: '$2b$12$WZDmT3LUEDYCRhyEMfpoP.7yH7xuWIGl1p36bpNngDz1.C7T9cK9a',\n                    ativo: true,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                }\n            ], {});\n\n    },\n\n    down: async (queryInterface, Sequelize) => {\n        await queryInterface.bulkDelete('Usuarios', null, {});\n    }\n};\n\n\n\n\n",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/seeders/20210405313141-demo-usuario.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 295,
    "kind": "file",
    "name": "api/services/ProjetosService.js",
    "content": "const Services = require('./Services')\nconst database = require('../models')\n/**\n * @extends {Services}\n * A classe Projetos Service extende a classe abstrada Services e é reponsável por implementar os métodos específicos de consulta e atualização de Projetos no DB através do modelo do Sequelize.\n */\nclass ProjetosService extends Services {\n    constructor() {\n        super('Projetos')\n    }\n    /**\n     * Busca projetos atrávés do id do usuário realizando um join com a tabela Tarefas, ordenando pelo id do projeto em ordem ascendente.\n     * @param {number} usuario_id \n     * @returns {Array}\n     */\n    async buscaProjetosPorUsuarioId(usuario_id) {\n        return database[this.nomeDoModelo].findAll(\n            {\n                where: { usuario_id },\n                include: [{\n                    model: database.Tarefas\n                }],\n                order: [['id', 'ASC']]\n            }\n        )\n    }\n\n    /**\n     * Atualiza os dados de um projeto.\n     * @param {objetc} dadosAtualizados \n     * @param {number} id \n     * @param {number} usuario_id \n     * @returns \n     */\n    async atualizaProjetoDoUsuario(dadosAtualizados, id, usuario_id) {\n        return database[this.nomeDoModelo]\n            .update(dadosAtualizados, { where: { id, usuario_id } })\n    }\n}\n\nmodule.exports = ProjetosService",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/services/ProjetosService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "Services",
    "memberof": "api/services/ProjetosService.js",
    "static": true,
    "longname": "api/services/ProjetosService.js~Services",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/ProjetosService.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "variable",
    "name": "database",
    "memberof": "api/services/ProjetosService.js",
    "static": true,
    "longname": "api/services/ProjetosService.js~database",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/ProjetosService.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "class",
    "name": "ProjetosService",
    "memberof": "api/services/ProjetosService.js",
    "static": true,
    "longname": "api/services/ProjetosService.js~ProjetosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/ProjetosService.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "Services"
    ]
  },
  {
    "__docId__": 299,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/services/ProjetosService.js~ProjetosService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/services/ProjetosService.js~ProjetosService#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "buscaProjetosPorUsuarioId",
    "memberof": "api/services/ProjetosService.js~ProjetosService",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/services/ProjetosService.js~ProjetosService#buscaProjetosPorUsuarioId",
    "access": "public",
    "description": "Busca projetos atrávés do id do usuário realizando um join com a tabela Tarefas, ordenando pelo id do projeto em ordem ascendente.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "usuario_id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "atualizaProjetoDoUsuario",
    "memberof": "api/services/ProjetosService.js~ProjetosService",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/services/ProjetosService.js~ProjetosService#atualizaProjetoDoUsuario",
    "access": "public",
    "description": "Atualiza os dados de um projeto.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "objetc"
        ],
        "spread": false,
        "optional": false,
        "name": "dadosAtualizados",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "usuario_id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "api/services/TarefasService.js",
    "content": "const Services = require('./Services')\nconst database = require('../models')\n/**\n * @extends {Services}\n * A classe Tarefas Service extende a classe abstrada Services e é reponsável por implementar os métodos específicos da classe no DB através do modelo do Sequelize.\n */\nclass TarefasService extends Services {\n    constructor() {\n        super('Tarefas')\n    }\n    /**\n     * Busca uma tarefa com base no id da tarefa e no de projeto\n     * @param {number} id \n     * @param {number} projeto_id \n     * @returns {object}\n     */\n    async pegaUmRegistro(id, projeto_id) {\n        return database[this.nomeDoModelo].findOne({ where: { id, projeto_id } })\n    }\n}\n\nmodule.exports = TarefasService",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/services/TarefasService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "Services",
    "memberof": "api/services/TarefasService.js",
    "static": true,
    "longname": "api/services/TarefasService.js~Services",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/TarefasService.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "variable",
    "name": "database",
    "memberof": "api/services/TarefasService.js",
    "static": true,
    "longname": "api/services/TarefasService.js~database",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/TarefasService.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "class",
    "name": "TarefasService",
    "memberof": "api/services/TarefasService.js",
    "static": true,
    "longname": "api/services/TarefasService.js~TarefasService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/TarefasService.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "Services"
    ]
  },
  {
    "__docId__": 306,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/services/TarefasService.js~TarefasService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/services/TarefasService.js~TarefasService#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "pegaUmRegistro",
    "memberof": "api/services/TarefasService.js~TarefasService",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "api/services/TarefasService.js~TarefasService#pegaUmRegistro",
    "access": "public",
    "description": "Busca uma tarefa com base no id da tarefa e no de projeto",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "projeto_id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "api/services/UsuariosService.js",
    "content": "const Services = require('./Services')\n/**\n * @extends {Services}\n * A classe Usuário Service extende a classe abstrada Services e é reponsável por implementar os métodos específicos da classe no DB através do modelo do Sequelize.\n */\nclass UsuariosService extends Services {\n    constructor() {\n        super('Usuarios')\n    }\n}\n\n\nmodule.exports = UsuariosService",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/services/UsuariosService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "Services",
    "memberof": "api/services/UsuariosService.js",
    "static": true,
    "longname": "api/services/UsuariosService.js~Services",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/UsuariosService.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "class",
    "name": "UsuariosService",
    "memberof": "api/services/UsuariosService.js",
    "static": true,
    "longname": "api/services/UsuariosService.js~UsuariosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/UsuariosService.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "Services"
    ]
  },
  {
    "__docId__": 311,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "api/services/UsuariosService.js~UsuariosService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "api/services/UsuariosService.js~UsuariosService#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "api/services/index.js",
    "content": "const UsuariosService = require('./UsuariosService')\nconst ProjetosService = require('./ProjetosService')\nconst TarefasService = require('./TarefasService')\n\nmodule.exports = { UsuariosService: UsuariosService, ProjetosService: ProjetosService, TarefasService: TarefasService }",
    "static": true,
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/api/services/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 313,
    "kind": "variable",
    "name": "UsuariosService",
    "memberof": "api/services/index.js",
    "static": true,
    "longname": "api/services/index.js~UsuariosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "variable",
    "name": "ProjetosService",
    "memberof": "api/services/index.js",
    "static": true,
    "longname": "api/services/index.js~ProjetosService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "name": "TarefasService",
    "memberof": "api/services/index.js",
    "static": true,
    "longname": "api/services/index.js~TarefasService",
    "access": "public",
    "export": false,
    "importPath": "task-manager/api/services/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Task Manager\n\n## Uma aplicação web para gerenciar tarefas de multi-usuários\n\n<a name=\"sobre\"></a>\n## Sobre\nA aplicação é a solucão do autor para um desafio de criação de um gerenciador de tarefas.\n\n<a name=\"tabela-de-conteudo\"></a>\n## Tabela de conteúdos\n\n   * [Sobre](#sobre)\n   * [Tabela de Conteudo](#tabela-de-conteudo)\n   * [Tecnologias](#tecnologias)\n   * [Instalação](#instalacao)\n   * [Licença](#licenca)\n\n<a name=\"tecnologias\"></a>\n## Tecnologias\n\nAs seguintes ferramentas foram usadas na construção do projeto:\n\n- [AngularJS] \n- [node.js]\n- [Express]\n- [Mysql]\n- [Sequelize]\n\n<a name=\"instalacao\"></a>\n## Instalação\n\nTaskmanager requer [Node.js](https://nodejs.org/) v10+ para rodar.\n\nOs modelos usados pela aplicação foram criados através do Sequelize, aperfeiçoando a implementação do DB. Dessa forma essa nova versão possui ORM que era uma carência da primeira versão.\n\nAssim, desse momento em diante todas as alterações no DB serão incrementais e poderão ser rastreadas. Sendo possível coordernar as alterações feitas por diferentes pessoas nas tabelas do banco como rastrear (e reverter) alterações feitas no banco se for preciso.\n\nO Usuário é uma classe com todas as funções para manipular um usuário.\n   - Para criar um usuário a classe é instanciada e o método criar é invocado, ela valida os campos obrigatórios e instância o modelo do sequelize para a inserção no banco.\n   - Além da validação é checado se o campo senha tem no minímo 8 caracteres e no máximo 64 caracteres, caso positivo é gerado um hash da senha com o módulo do node bcrypt, assim a senha digitada pelo usuário não será gravada no banco.\n   - O modelo Usuários do sequelize além de validar a obrigatoriedade dos campos, para respeitar a regra de negócio mesmo que o método seja invocado por outra rota, verifica se o e-mail é válido e se ele já foi cadastrado. Caso já tenha sido cadastrado o erro é tratado pelo middleware e pela classe de erro CampoDuplicado.\n   (enviado e-mail de confirmação da conta para o e-mail cadastrado, middlewares e tokens são utilizados para criar um token com o id do usuário para verificar o endereço de e-mail do usuário)\n   - A requisição encerra com status 201 e a mensagem de que o usuário foi criado com sucesso.\n\nPara configuração da estratégia local de autenticação do usuário foi usado o módulo node passport e passport-local\nA configuração foi concentrada no middleware estrategiaAutenticacao.\n   - Em estrategiaAutenticacao, o passport é configurado e a estratégia local é configurada.\n   - A classe Usuário é instanciada e é feito a busca do registro do usuário pelo e-mail informado no login, caso retorno nulo a estratégia devolve o erro de que o usuário não foi localizado.\n   - Encontrado o usuário a senha informada é validada com hash da senha salvo no DB através do método compare do bcrypt.\n   - Confirmado que a senha é a correta o middleware passa o usuário localizado para o próximo middleware.\n\nQuando a autenticação é bem sucedida, a requisição de login recebe os dados de usuário e gera um jwt com o id que é devolvido no header ('Authorization) da resposta da chamada.\n\nPara gerar a senha que assina o jwt, fazendo uso do console, foi executado  comando:  \n\n   -  node -e \"console.log(require('crypto').randomBytes(256).toString('base64'))\"\n\n   - Onde invocamos o módulo crypto e chamamos o método para criar bytes pseudo-aleatórios e convertemos o resultado para uma string na base 64.\n\n   - Essa senha foi então adicionada ao arquivo .env na raiz do projeto, sobre o parâmetro CHAVE_JWT.\n\n   - Para acessar esse parâmetro, é utilizado o módulo dotenv e assim, através de process.env.CHAVE_JWT a senha é utilizada para assinar o token.\n\nObs. O correto é adicionar o .env ao .gitignore para proteção da assinatura do token mas como o objetivo desse projeto é apresentar a solução completa, foi feita a opção por publicar o item para consulta de seu contéudo.\n\nPara receber e validar o token nas rotas que precisam de autenticação, foi utilizado o módulo passport-http-bearer e feita a sua configuração no middleware de estrategiaAutenticacao, como estratégia 'bearer':\n   - A estratégia faz uso do método do módulo jwt verify para validar o token enviado, a váriavel de ambiente CHAVE_JWT é utilizada.\n   - O resultado da verificação é atribuído a constante payload com o id do usuário.\n   - Criamos uma nova instância da classe Usuário e passamos o id para o construtor;\n   - Em seguida o método buscarPorId() é invocado;\n   - Encontrado o usuário o middleware passa o usuário localizado para o próximo middleware.\n\n   Para fazer uso da estratégia nas rotas que devem ser protegidas, basta adicionar o middleware como no exemplo a abaixo:\n   router.post('/rota_com_autenticação/', passport.authenticate('bearer', { session: false }), (req, res, next) => {\n\nApós a implementação da estratégia, foi criado um middleware de autenticação para tratar e formatar erros gerados pela validação do passport.\n\nPara gerir o processo de logout foi preciso criar uma blacklist, foi utilizado o módulo redis para isso.\nCriamos o cliente redis para a blacklist na pasta redis na raiz do projeto.\nDepois foi criada a classe que é responsável por adicionar e verificar a existência de tokens na lista.\nFeito isso, foi criada a rota de logout e adicionamos o token jwt fazendo o uso da classe ManipulaBlacklist.\nDepois disso na estratégia bearer adicionamos a verificação na backlist para verificar se o token da requisição está na blacklist.\nFoi criado a classe para tratar o erro quando o token foi inválidado por logout.\n\nComo o JWT tem um tempo de expiração de 15 minutos, será necessário implementar um refresh token e também uma allowlist.\nPara trabalhar com as diferentes listas no redis, foi criada uma interface genérica.\nAssim blocklist e allowlist podem trabalhar as diferentes regras de negócio e fazer as operações necessárias nas listas.\n\nInterface tokens concentrando e abstraindo todas as operações com tokens\n\nPara a documentação foi utilizado o módulo esDoc, \nAssim que o módulo é instalado, rodei o comando abaixo no terminal, de acordo com a documentação do plugin.\necho '{\n  \"source\": \"./src\",\n  \"destination\": \"./docs\",\n  \"plugins\": [{\"name\": \"esdoc-standard-plugin\"}]\n}' > .esdoc.json\n\napós isso, editei o arquivo criado para as particularidades do projeto:\n\n{\n  \"source\": \"./api\",\n  \"destination\": \"./docs\",\n  \"plugins\": [\n    {\n      \"name\": \"esdoc-standard-plugin\",\n      \"option\": {\n        \"undocumentIdentifier\": {\n          \"enable\": false\n        },\n        \"unexportedIdentifier\": {\n          \"enable\": true\n        }\n      }\n    }\n  ]\n}\n\nE para atualizar a documentação quando necessário, bastou rodar o comando abaixo:\n./node_modules/.bin/esdoc\n\n\nInstale as dependências e as devDependencies e inicie o servidor.\n\n```sh\ncd taskmanager\nnpm i\nnpm start\n```\n<a name=\"licenca\"></a>\n## Licença\n\nMIT\n\n   [node.js]: <http://nodejs.org>\n   [mysql]: <https://www.mysql.com>\n   [express]: <http://expressjs.com>\n   [AngularJS]: <http://angularjs.org>\n\n",
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"task-manager\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"./api/index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"nodemon index.js\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"bcrypt\": \"^3.0.8\",\n    \"body-parser\": \"^1.19.0\",\n    \"consign\": \"^0.1.6\",\n    \"dotenv\": \"^8.2.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"express\": \"^4.17.1\",\n    \"express-validator\": \"^3.2.0\",\n    \"jsonwebtoken\": \"^8.5.1\",\n    \"moment\": \"^2.26.0\",\n    \"mysql\": \"^2.18.1\",\n    \"mysql2\": \"^2.2.5\",\n    \"nodemailer\": \"^6.5.0\",\n    \"passport\": \"^0.4.1\",\n    \"passport-http-bearer\": \"^1.0.1\",\n    \"passport-local\": \"^1.0.0\",\n    \"path\": \"^0.12.7\",\n    \"redis\": \"^3.0.2\",\n    \"sequelize\": \"^6.6.2\",\n    \"sequelize-cli\": \"^6.2.0\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^2.0.7\"\n  }\n}\n",
    "longname": "/Users/tiagosolci/Documents/WebstormProjects/task-manager/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]